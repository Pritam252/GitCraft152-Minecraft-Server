# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    # inputs:
      # name:
        # Friendly description to be shown in the UI instead of 'name'
        # description: 'Person to greet'
        # Default value if no value is explicitly provided
        # default: 'World'
        # Input has to be provided for the workflow to run
        # required: true

defaults:
  run:
    working-directory: .

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  # greet:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # steps:
    # Runs a single command using the runners shell
    # - name: Send greeting
      # run: echo "Hello ${{ github.event.inputs.name }}"
  
  runcraft:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v3.5.1
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 8
          # Java distribution. See the list of supported distributions in README file
          distribution: zulu
          # The package type (jdk, jre, jdk+fx, jre+fx)
          java-package: jdk
          # The architecture of the package
          architecture: x64
          # Path to where the compressed JDK is located
          #jdkFile: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          # check-latest: # optional
          # ID of the distributionManagement repository in the pom.xml file. Default is `github`
          server-id: github
          # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
          server-username: $GITHUB_ACTOR
          # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
          server-password: $GITHUB_TOKEN
          # Path to where the settings.xml file will be written. Default is ~/.m2.
          settings-path: ~/.m2
          # Overwrite the settings.xml file if it exists. Default is "true".
          overwrite-settings: true
          # GPG private key to import. Default is empty string.
          gpg-private-key: ""
          # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
          gpg-passphrase: $GPG_PASSPHRASE
          # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
          cache: maven
          # Workaround to pass job status to post job step. This variable is not intended for manual setting
          job-status: ${{ job.status }}
          # Used to pull java versions from setup-java. Since there is a default value, token is typically not supplied by the user.
          token: ${{ github.token }}
      - name: Start
        run: cmd /c run.cmd
